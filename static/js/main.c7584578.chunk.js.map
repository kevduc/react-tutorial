{"version":3,"sources":["components/Counter.tsx","components/Counters.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["Counter","className","this","getBadgeVariant","formatCount","onClick","props","onChange","value","disabled","onDelete","count","Component","Counters","onReset","Fragment","counters","map","counter","id","newValue","key","NavBar","href","numItems","App","state","handleResetAll","setState","handleChange","counterId","index","findIndex","handleDelete","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA+CeA,G,kKAlCb,WAAU,IAAD,OACP,OACE,yBAAKC,UAAU,0FACb,yBAAKA,UAAU,qBACb,0BAAMA,UAAS,gBAAWC,KAAKC,kBAAhB,uBAAwDD,KAAKE,gBAE9E,yBAAKH,UAAU,WACb,4BACEI,QAAS,kBAAM,EAAKC,MAAMC,SAAS,EAAKD,MAAME,MAAQ,IACtDP,UAAU,+BACVQ,SAAUP,KAAKI,MAAME,OAAS,GAC9B,0BAAMP,UAAU,IAAhB,MAEF,4BAAQI,QAAS,kBAAM,EAAKC,MAAMC,SAAS,EAAKD,MAAME,MAAQ,IAAIP,UAAU,gCAC1E,0BAAMA,UAAU,IAAhB,MAEF,4BAAQI,QAASH,KAAKI,MAAMI,SAAUT,UAAU,6BAC9C,0BAAMA,UAAU,IAAhB,U,6BAOV,WACE,OAA4B,IAArBC,KAAKI,MAAME,MAAc,gBAAkB,4B,yBAGpD,WACE,IAAMG,EAAQT,KAAKI,MAAME,MACzB,OAAiB,IAAVG,EAAc,OAASA,M,GA/BZC,cCwBPC,E,4JAvBb,WACE,MAAwCX,KAAKI,MAArCQ,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,SAAUH,EAA3B,EAA2BA,SAE3B,OACE,kBAAC,IAAMQ,SAAP,KACE,yBAAKd,UAAU,aACb,4BAAQI,QAASS,EAASb,UAAU,8BAApC,UAIDC,KAAKI,MAAMU,SAASC,KAAI,SAACC,GAAD,OACvB,kBAAC,EAAD,CACER,SAAU,kBAAMA,EAASQ,EAAQC,KACjCZ,SAAU,SAACa,GAAD,OAAsBb,EAASW,EAAQC,GAAIC,IACrDC,IAAKH,EAAQC,GACbX,MAAOU,EAAQV,gB,GAhBJI,aCCRU,EAXA,SAAChB,GACd,OACE,yBAAKL,UAAU,sEACb,uBAAGA,UAAU,eAAesB,KAAK,KAAjC,SAEE,0BAAMtB,UAAS,yCAA4CK,EAAMkB,aCkD1DC,E,4MA7CbC,MAAkB,CAChBV,SAAU,CACR,CAAEG,GAAI,EAAGX,MAAO,GAChB,CAAEW,GAAI,EAAGX,MAAO,GAChB,CAAEW,GAAI,EAAGX,MAAO,GAChB,CAAEW,GAAI,EAAGX,MAAO,K,EAIpBmB,eAAiB,WACf,IAAMX,EAAW,EAAKU,MAAMV,SAASC,KAAI,SAACC,GAAD,mBAAC,eACrCA,GADoC,IAEvCV,MAAO,OAET,EAAKoB,SAAS,CAAEZ,c,EAGlBa,aAAe,SAACC,EAAmBV,GACjC,IAAMJ,EAAa,YAAO,EAAKU,MAAMV,UAC/Be,EAAQf,EAASgB,WAAU,SAACd,GAAD,OAAkBA,EAAQC,KAAOW,KAClEd,EAASe,GAAT,2BAAuBf,EAASe,IAAhC,IAAwCvB,MAAOY,IAC/C,EAAKQ,SAAS,CAAEZ,c,EAGlBiB,aAAe,SAACH,GACd,IAAMd,EAAW,EAAKU,MAAMV,SAASkB,QAAO,SAAChB,GAAD,OAAaA,EAAQC,KAAOW,KACxE,EAAKF,SAAS,CAAEZ,c,4CAGlB,WACE,OACE,yBAAKf,UAAU,OACb,kBAAC,EAAD,CAAQuB,SAAUtB,KAAKwB,MAAMV,SAASkB,QAAO,SAAChB,GAAD,OAAaA,EAAQV,MAAQ,KAAG2B,SAC7E,0BAAMlC,UAAU,mBACd,kBAAC,EAAD,CACEe,SAAUd,KAAKwB,MAAMV,SACrBF,QAASZ,KAAKyB,eACdjB,SAAUR,KAAK+B,aACf1B,SAAUL,KAAK2B,qB,GAvCTjB,a,MCLlBwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c7584578.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport interface CounterProps {\r\n  value: number\r\n  onDelete: any\r\n  onChange: any\r\n}\r\n\r\nexport interface CounterState {\r\n  value: number\r\n}\r\n\r\nclass Counter extends Component<CounterProps, CounterState> {\r\n  render() {\r\n    return (\r\n      <div className=\"counter row align-content-center justify-content-md-left row-cols-auto m-2 text-center\">\r\n        <div className=\"count p-2 my-auto\">\r\n          <span className={`badge ${this.getBadgeVariant()} align-self-center`}>{this.formatCount()}</span>\r\n        </div>\r\n        <div className=\"col p-1\">\r\n          <button\r\n            onClick={() => this.props.onChange(this.props.value - 1)}\r\n            className=\"btn btn-secondary btn-lg m-1\"\r\n            disabled={this.props.value <= 0}>\r\n            <span className=\"\">-</span>\r\n          </button>\r\n          <button onClick={() => this.props.onChange(this.props.value + 1)} className=\"btn btn-secondary btn-lg m-1\">\r\n            <span className=\"\">+</span>\r\n          </button>\r\n          <button onClick={this.props.onDelete} className=\"btn btn-danger btn-lg m-1\">\r\n            <span className=\"\">x</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  private getBadgeVariant() {\r\n    return this.props.value === 0 ? 'badge-warning' : 'badge-primary ml-3 mr-3'\r\n  }\r\n\r\n  private formatCount() {\r\n    const count = this.props.value\r\n    return count === 0 ? 'Zero' : count\r\n  }\r\n}\r\n\r\nexport default Counter\r\n","import React, { Component } from 'react'\r\nimport Counter from './Counter'\r\n\r\nexport interface CountersProps {\r\n  counters: any\r\n  onReset: any\r\n  onDelete: any\r\n  onChange: any\r\n}\r\n\r\nexport interface CountersState {}\r\n\r\nclass Counters extends Component<CountersProps, CountersState> {\r\n  render() {\r\n    const { onReset, onDelete, onChange } = this.props\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"text-left\">\r\n          <button onClick={onReset} className=\"btn btn-primary btn-lg m-2\">\r\n            Reset\r\n          </button>\r\n        </div>\r\n        {this.props.counters.map((counter: any) => (\r\n          <Counter\r\n            onDelete={() => onDelete(counter.id)}\r\n            onChange={(newValue: number) => onChange(counter.id, newValue)}\r\n            key={counter.id}\r\n            value={counter.value}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Counters\r\n","import React from 'react'\r\n\r\nconst NavBar = (props: any) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light d-flex flex-row justify-content-start\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        Navbar\r\n        <span className={`badge badge-pill badge-secondary ml-2`}>{props.numItems}</span>\r\n      </a>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport Counters from './components/Counters'\nimport NavBar from './components/NavBar'\n\nexport interface AppProps {}\n\nexport interface AppState {\n  counters: { id: number; value: number }[]\n}\n\nclass App extends Component<AppProps, AppState> {\n  state: AppState = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  }\n\n  handleResetAll = () => {\n    const counters = this.state.counters.map((counter: any) => ({\n      ...counter,\n      value: 0,\n    }))\n    this.setState({ counters })\n  }\n\n  handleChange = (counterId: number, newValue: number) => {\n    const counters: any = [...this.state.counters]\n    const index = counters.findIndex((counter: any) => counter.id === counterId)\n    counters[index] = { ...counters[index], value: newValue }\n    this.setState({ counters })\n  }\n\n  handleDelete = (counterId: number) => {\n    const counters = this.state.counters.filter((counter) => counter.id !== counterId)\n    this.setState({ counters })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar numItems={this.state.counters.filter((counter) => counter.value > 0).length} />\n        <main className=\"container-fluid\">\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleResetAll}\n            onDelete={this.handleDelete}\n            onChange={this.handleChange}></Counters>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}